import requests
import pandas as pd
from bs4 import BeautifulSoup

# IMDB's homepage
imdb_url = 'https://www.imdb.com'

# Use requests to retrieve data from a given URL
imdb_response = requests.get(imdb_url)

# Parse the whole HTML page using BeautifulSoup
imdb_soup = BeautifulSoup(imdb_response.text, 'html.parser')

# Title of the parsed page
imdb_soup.title.text

# Find all links
links = [link.get('href') for link in imdb_soup.find_all('a')]

# Add homepage and keep the unique links
fixed_links = set([''.join([imdb_url, link]) for link in links if link])


unique_links = []
for link in links:
    if not link in unique_links:
        unique_links.append(imdb_url + link)

# Box Office Mojo - UK Weekend box office
boxofficemojo_url = 'https://www.boxofficemojo.com/intl/uk/?yr=2019&wk=33&currency=local'

# Use requests to retrieve data from a given URL
bom_response = requests.get(boxofficemojo_url)

# Parse the whole HTML page using BeautifulSoup
bom_soup = BeautifulSoup(bom_response.text, 'html.parser')

print(f"NUMBER OF TABLES IN THE PAGE: {len(bom_soup.find_all('table'))}")

table = bom_soup.find_all('table')[0]

table

table.find_all('tr')[0].contents

table.find_all('tr')[0].text.split('\n')

lst = []
for row in table.find_all('tr')[1:]:
    s = pd.Series([data.text for data in row.find_all('td')])
    lst.append(s)

data = pd.concat(lst, axis=1).T

data.head(2)

print(f'(MOVIES, COLUMNS) -> {data.shape}')

print(f'% OF MISSING VALUES PER COLUMN\n{(data.isnull().sum() / data.shape[0]) * 100}')